---
export interface Props {
  config: any;
}

const { config } = Astro.props;
const embeds = config.content?.embeds || [];
const currentEmbed = embeds[0] || { url: 'https://example.com', title: 'Embed' };
---

<div class="iframe-embed-container">
  {embeds.length > 1 && (
    <div class="embed-selector">
      <select id="embed-select" class="embed-dropdown">
        {embeds.map((embed: any, index: number) => (
          <option value={index}>{embed.title || `Embed ${index + 1}`}</option>
        ))}
      </select>
    </div>
  )}
  
  <div class="embed-wrapper">
    <iframe 
      id="embed-frame"
      src={currentEmbed.url}
      class="embed-iframe"
      title={currentEmbed.title}
      allowfullscreen
    ></iframe>
  </div>

  <div class="embed-info">
    <p id="embed-title">{currentEmbed.title}</p>
    {currentEmbed.description && (
      <p id="embed-description">{currentEmbed.description}</p>
    )}
  </div>
</div>

<style>
  .iframe-embed-container {
    width: 100vw;
    height: 100vh;
    background: #1a1a1a;
    display: flex;
    flex-direction: column;
  }

  .embed-selector {
    padding: 15px;
    background: rgba(0, 0, 0, 0.8);
    text-align: center;
  }

  .embed-dropdown {
    padding: 8px 16px;
    font-size: 16px;
    background: rgba(255, 255, 255, 0.1);
    color: white;
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 4px;
  }

  .embed-wrapper {
    flex: 1;
    position: relative;
    padding: 20px;
  }

  .embed-iframe {
    width: 100%;
    height: 100%;
    border: none;
    border-radius: 8px;
    background: white;
  }

  .embed-info {
    padding: 20px;
    background: rgba(0, 0, 0, 0.8);
    color: white;
    text-align: center;
  }

  #embed-title {
    font-size: 1.2rem;
    margin: 0 0 10px 0;
  }

  #embed-description {
    font-size: 0.9rem;
    opacity: 0.8;
    margin: 0;
  }
</style>

<script define:vars={{ embeds }}>
  const select = document.getElementById('embed-select') as HTMLSelectElement;
  const iframe = document.getElementById('embed-frame') as HTMLIFrameElement;
  const title = document.getElementById('embed-title');
  const description = document.getElementById('embed-description');

  select?.addEventListener('change', () => {
    const index = parseInt(select.value);
    const embed = embeds[index];
    if (embed) {
      iframe.src = embed.url;
      if (title) title.textContent = embed.title || `Embed ${index + 1}`;
      if (description) {
        description.textContent = embed.description || '';
        description.style.display = embed.description ? 'block' : 'none';
      }
    }
  });
</script>