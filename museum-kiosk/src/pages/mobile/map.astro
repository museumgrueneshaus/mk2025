---
import MobileLayout from '../../layouts/MobileLayout.astro';
---

<MobileLayout title="Museumsplan - Museum GrÃ¼nes Haus">
  <div class="map-page">
    <!-- Floor Selector -->
    <div class="floor-selector">
      <button class="floor-btn active" data-floor="0">EG</button>
      <button class="floor-btn" data-floor="1">1. OG</button>
      <button class="floor-btn" data-floor="2">2. OG</button>
      <button class="floor-btn" data-floor="3">3. OG</button>
    </div>

    <!-- Map Container -->
    <div class="map-container">
      <div class="map-wrapper" id="map-wrapper">
        <!-- Floor 0 - Ground Floor -->
        <div class="floor-map active" data-floor="0">
          <svg viewBox="0 0 800 600" class="floor-svg">
            <!-- Museum outline -->
            <rect x="50" y="50" width="700" height="500" fill="#f5f5f5" stroke="#333" stroke-width="2"/>
            
            <!-- Entrance -->
            <rect x="350" y="520" width="100" height="30" fill="#4CAF50" opacity="0.3"/>
            <text x="400" y="540" text-anchor="middle" font-size="14" font-weight="bold">Eingang</text>
            
            <!-- Rooms -->
            <g class="room" data-room="foyer">
              <rect x="300" y="400" width="200" height="120" fill="#e3f2fd" stroke="#333" stroke-width="1"/>
              <text x="400" y="460" text-anchor="middle" font-size="16">Foyer</text>
            </g>
            
            <g class="room" data-room="shop">
              <rect x="100" y="400" width="150" height="120" fill="#fff3e0" stroke="#333" stroke-width="1"/>
              <text x="175" y="460" text-anchor="middle" font-size="16">Shop</text>
            </g>
            
            <g class="room" data-room="cafe">
              <rect x="550" y="400" width="150" height="120" fill="#f3e5f5" stroke="#333" stroke-width="1"/>
              <text x="625" y="460" text-anchor="middle" font-size="16">CafÃ©</text>
            </g>
            
            <g class="room" data-room="exhibition-1">
              <rect x="100" y="100" width="250" height="250" fill="#e8f5e9" stroke="#333" stroke-width="1"/>
              <text x="225" y="225" text-anchor="middle" font-size="16">Ausstellung 1</text>
              <text x="225" y="245" text-anchor="middle" font-size="12" fill="#666">Stadtgeschichte</text>
            </g>
            
            <g class="room" data-room="exhibition-2">
              <rect x="450" y="100" width="250" height="250" fill="#fce4ec" stroke="#333" stroke-width="1"/>
              <text x="575" y="225" text-anchor="middle" font-size="16">Ausstellung 2</text>
              <text x="575" y="245" text-anchor="middle" font-size="12" fill="#666">Kunstsammlung</text>
            </g>
            
            <!-- Facilities -->
            <g class="facility" data-type="toilet">
              <rect x="250" y="430" width="40" height="40" fill="#fff" stroke="#333" stroke-width="1"/>
              <text x="270" y="455" text-anchor="middle" font-size="20">ðŸš»</text>
            </g>
            
            <g class="facility" data-type="elevator">
              <rect x="380" y="350" width="40" height="40" fill="#fff" stroke="#333" stroke-width="1"/>
              <text x="400" y="375" text-anchor="middle" font-size="20">ðŸ›—</text>
            </g>
            
            <!-- You are here marker -->
            <circle id="location-marker" cx="400" cy="460" r="8" fill="#ff4444" display="none">
              <animate attributeName="r" values="8;12;8" dur="2s" repeatCount="indefinite"/>
              <animate attributeName="opacity" values="1;0.5;1" dur="2s" repeatCount="indefinite"/>
            </circle>
          </svg>
        </div>

        <!-- Floor 1 -->
        <div class="floor-map" data-floor="1">
          <svg viewBox="0 0 800 600" class="floor-svg">
            <rect x="50" y="50" width="700" height="500" fill="#f5f5f5" stroke="#333" stroke-width="2"/>
            
            <g class="room" data-room="exhibition-3">
              <rect x="100" y="100" width="300" height="200" fill="#e1f5fe" stroke="#333" stroke-width="1"/>
              <text x="250" y="200" text-anchor="middle" font-size="16">Ausstellung 3</text>
              <text x="250" y="220" text-anchor="middle" font-size="12" fill="#666">Naturkunde</text>
            </g>
            
            <g class="room" data-room="exhibition-4">
              <rect x="450" y="100" width="250" height="200" fill="#fff9c4" stroke="#333" stroke-width="1"/>
              <text x="575" y="200" text-anchor="middle" font-size="16">Ausstellung 4</text>
              <text x="575" y="220" text-anchor="middle" font-size="12" fill="#666">Handwerk</text>
            </g>
            
            <g class="room" data-room="event-room">
              <rect x="100" y="350" width="600" height="150" fill="#ffebee" stroke="#333" stroke-width="1"/>
              <text x="400" y="425" text-anchor="middle" font-size="16">Veranstaltungsraum</text>
            </g>
            
            <g class="facility" data-type="elevator">
              <rect x="380" y="300" width="40" height="40" fill="#fff" stroke="#333" stroke-width="1"/>
              <text x="400" y="325" text-anchor="middle" font-size="20">ðŸ›—</text>
            </g>
          </svg>
        </div>

        <!-- Floor 2 -->
        <div class="floor-map" data-floor="2">
          <svg viewBox="0 0 800 600" class="floor-svg">
            <rect x="50" y="50" width="700" height="500" fill="#f5f5f5" stroke="#333" stroke-width="2"/>
            
            <g class="room" data-room="library">
              <rect x="100" y="100" width="600" height="200" fill="#e8eaf6" stroke="#333" stroke-width="1"/>
              <text x="400" y="200" text-anchor="middle" font-size="16">Bibliothek</text>
            </g>
            
            <g class="room" data-room="study-room">
              <rect x="100" y="350" width="250" height="150" fill="#f1f8e9" stroke="#333" stroke-width="1"/>
              <text x="225" y="425" text-anchor="middle" font-size="16">Studienraum</text>
            </g>
            
            <g class="room" data-room="archive">
              <rect x="450" y="350" width="250" height="150" fill="#fafafa" stroke="#333" stroke-width="1"/>
              <text x="575" y="425" text-anchor="middle" font-size="16">Archiv</text>
            </g>
            
            <g class="facility" data-type="elevator">
              <rect x="380" y="300" width="40" height="40" fill="#fff" stroke="#333" stroke-width="1"/>
              <text x="400" y="325" text-anchor="middle" font-size="20">ðŸ›—</text>
            </g>
          </svg>
        </div>

        <!-- Floor 3 -->
        <div class="floor-map" data-floor="3">
          <svg viewBox="0 0 800 600" class="floor-svg">
            <rect x="50" y="50" width="700" height="500" fill="#f5f5f5" stroke="#333" stroke-width="2"/>
            
            <g class="room" data-room="panorama">
              <rect x="100" y="100" width="600" height="300" fill="#e0f2f1" stroke="#333" stroke-width="1"/>
              <text x="400" y="250" text-anchor="middle" font-size="16">Panorama-Terrasse</text>
              <text x="400" y="270" text-anchor="middle" font-size="12" fill="#666">Aussichtsplattform</text>
            </g>
            
            <g class="facility" data-type="elevator">
              <rect x="380" y="410" width="40" height="40" fill="#fff" stroke="#333" stroke-width="1"/>
              <text x="400" y="435" text-anchor="middle" font-size="20">ðŸ›—</text>
            </g>
          </svg>
        </div>
      </div>
      
      <!-- Zoom Controls -->
      <div class="zoom-controls">
        <button id="zoom-in" class="zoom-btn">+</button>
        <button id="zoom-out" class="zoom-btn">âˆ’</button>
        <button id="zoom-reset" class="zoom-btn">âŸ²</button>
      </div>
      
      <!-- Location Button -->
      <button id="locate-btn" class="locate-btn">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
          <path d="M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"/>
        </svg>
      </button>
    </div>

    <!-- Legend -->
    <div class="legend">
      <h3>Legende</h3>
      <div class="legend-items">
        <div class="legend-item">
          <span class="legend-color" style="background: #e8f5e9"></span>
          <span>Ausstellungen</span>
        </div>
        <div class="legend-item">
          <span class="legend-color" style="background: #fff3e0"></span>
          <span>Shop</span>
        </div>
        <div class="legend-item">
          <span class="legend-color" style="background: #f3e5f5"></span>
          <span>CafÃ©</span>
        </div>
        <div class="legend-item">
          <span class="legend-color" style="background: #e3f2fd"></span>
          <span>Foyer</span>
        </div>
        <div class="legend-item">
          <span class="legend-icon">ðŸš»</span>
          <span>WC</span>
        </div>
        <div class="legend-item">
          <span class="legend-icon">ðŸ›—</span>
          <span>Aufzug</span>
        </div>
      </div>
    </div>

    <!-- Room Info Modal -->
    <div id="room-modal" class="room-modal" style="display: none;">
      <div class="modal-content">
        <button class="modal-close" id="close-modal">Ã—</button>
        <h2 id="room-title"></h2>
        <p id="room-description"></p>
        <button id="navigate-btn" class="navigate-btn">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
            <path d="M21.71 11.29l-9-9c-.39-.39-1.02-.39-1.41 0l-9 9c-.39.39-.39 1.02 0 1.41l9 9c.39.39 1.02.39 1.41 0l9-9c.39-.38.39-1.01 0-1.41zM14 14.5V12h-4v3H8v-4c0-.55.45-1 1-1h5V7.5l3.5 3.5-3.5 3.5z"/>
          </svg>
          Navigation starten
        </button>
      </div>
    </div>
  </div>
</MobileLayout>

<style>
  .map-page {
    min-height: 100vh;
    background: white;
    display: flex;
    flex-direction: column;
  }

  /* Floor Selector */
  .floor-selector {
    display: flex;
    padding: 15px;
    gap: 10px;
    background: #f8f8f8;
    border-bottom: 1px solid #e0e0e0;
  }

  .floor-btn {
    flex: 1;
    padding: 10px;
    background: white;
    border: 1px solid #ddd;
    border-radius: 8px;
    font-size: 14px;
    font-weight: 500;
    color: #666;
    cursor: pointer;
    transition: all 0.2s;
  }

  .floor-btn.active {
    background: #4CAF50;
    color: white;
    border-color: #4CAF50;
  }

  /* Map Container */
  .map-container {
    flex: 1;
    position: relative;
    overflow: hidden;
    background: #fafafa;
  }

  .map-wrapper {
    width: 100%;
    height: 100%;
    position: relative;
    transform-origin: center;
    transition: transform 0.3s;
  }

  .floor-map {
    position: absolute;
    inset: 0;
    display: none;
    padding: 20px;
  }

  .floor-map.active {
    display: block;
  }

  .floor-svg {
    width: 100%;
    height: 100%;
  }

  /* Room interactions */
  .room {
    cursor: pointer;
    transition: opacity 0.2s;
  }

  .room:hover {
    opacity: 0.8;
  }

  .room.selected rect {
    stroke: #4CAF50;
    stroke-width: 3;
  }

  .facility {
    cursor: pointer;
  }

  /* Zoom Controls */
  .zoom-controls {
    position: absolute;
    top: 20px;
    right: 20px;
    display: flex;
    flex-direction: column;
    gap: 5px;
  }

  .zoom-btn {
    width: 40px;
    height: 40px;
    background: white;
    border: 1px solid #ddd;
    border-radius: 8px;
    font-size: 20px;
    cursor: pointer;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: all 0.2s;
  }

  .zoom-btn:active {
    transform: scale(0.95);
  }

  /* Locate Button */
  .locate-btn {
    position: absolute;
    bottom: 100px;
    right: 20px;
    width: 48px;
    height: 48px;
    background: white;
    border: 1px solid #ddd;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    transition: all 0.2s;
  }

  .locate-btn:active {
    transform: scale(0.95);
  }

  .locate-btn.active {
    background: #4CAF50;
    color: white;
    border-color: #4CAF50;
  }

  /* Legend */
  .legend {
    padding: 15px;
    background: white;
    border-top: 1px solid #e0e0e0;
  }

  .legend h3 {
    font-size: 14px;
    margin-bottom: 10px;
    color: #666;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .legend-items {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 8px;
  }

  .legend-item {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 13px;
    color: #333;
  }

  .legend-color {
    width: 20px;
    height: 20px;
    border: 1px solid #ddd;
    border-radius: 4px;
  }

  .legend-icon {
    width: 20px;
    text-align: center;
    font-size: 16px;
  }

  /* Room Modal */
  .room-modal {
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: flex-end;
    z-index: 1000;
  }

  .modal-content {
    background: white;
    width: 100%;
    padding: 25px 20px;
    border-top-left-radius: 20px;
    border-top-right-radius: 20px;
    position: relative;
  }

  .modal-close {
    position: absolute;
    top: 15px;
    right: 15px;
    background: none;
    border: none;
    font-size: 30px;
    color: #999;
    cursor: pointer;
  }

  #room-title {
    font-size: 22px;
    margin-bottom: 10px;
    color: #333;
  }

  #room-description {
    font-size: 14px;
    color: #666;
    line-height: 1.5;
    margin-bottom: 20px;
  }

  .navigate-btn {
    width: 100%;
    padding: 12px;
    background: #4CAF50;
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 16px;
    font-weight: 600;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    cursor: pointer;
    transition: all 0.2s;
  }

  .navigate-btn:active {
    transform: scale(0.98);
  }

  /* Touch gestures */
  .map-wrapper.dragging {
    cursor: grabbing;
  }
</style>

<script>
  // Floor switching
  const floorBtns = document.querySelectorAll('.floor-btn');
  const floorMaps = document.querySelectorAll('.floor-map');
  
  floorBtns.forEach(btn => {
    btn.addEventListener('click', () => {
      const floor = btn.getAttribute('data-floor');
      
      // Update buttons
      floorBtns.forEach(b => b.classList.remove('active'));
      btn.classList.add('active');
      
      // Update maps
      floorMaps.forEach(map => {
        map.classList.toggle('active', map.getAttribute('data-floor') === floor);
      });
    });
  });
  
  // Zoom functionality
  let zoomLevel = 1;
  const mapWrapper = document.getElementById('map-wrapper');
  
  document.getElementById('zoom-in')?.addEventListener('click', () => {
    zoomLevel = Math.min(zoomLevel * 1.2, 3);
    if (mapWrapper) {
      mapWrapper.style.transform = `scale(${zoomLevel})`;
    }
  });
  
  document.getElementById('zoom-out')?.addEventListener('click', () => {
    zoomLevel = Math.max(zoomLevel / 1.2, 1);
    if (mapWrapper) {
      mapWrapper.style.transform = `scale(${zoomLevel})`;
    }
  });
  
  document.getElementById('zoom-reset')?.addEventListener('click', () => {
    zoomLevel = 1;
    if (mapWrapper) {
      mapWrapper.style.transform = `scale(1)`;
    }
  });
  
  // Room info
  const roomData: Record<string, { title: string, description: string }> = {
    'foyer': {
      title: 'Foyer',
      description: 'Empfangsbereich mit Information und Garderobe.'
    },
    'shop': {
      title: 'Museumsshop',
      description: 'BÃ¼cher, Souvenirs und regionale Produkte.'
    },
    'cafe': {
      title: 'MuseumscafÃ©',
      description: 'GenieÃŸen Sie Kaffee und hausgemachte Kuchen in gemÃ¼tlicher AtmosphÃ¤re.'
    },
    'exhibition-1': {
      title: 'Stadtgeschichte Reutte',
      description: 'Entdecken Sie die Geschichte von Reutte von der RÃ¶merzeit bis heute.'
    },
    'exhibition-2': {
      title: 'Kunstsammlung',
      description: 'Werke regionaler KÃ¼nstler aus vier Jahrhunderten.'
    },
    'exhibition-3': {
      title: 'Naturkunde',
      description: 'Flora und Fauna der Tiroler Alpen.'
    },
    'exhibition-4': {
      title: 'Handwerk & Tradition',
      description: 'Traditionelles Handwerk und Brauchtum aus der Region.'
    },
    'event-room': {
      title: 'Veranstaltungsraum',
      description: 'Raum fÃ¼r VortrÃ¤ge, Workshops und Sonderausstellungen.'
    },
    'library': {
      title: 'Bibliothek',
      description: 'Umfangreiche Sammlung zur Regional- und Kunstgeschichte.'
    },
    'study-room': {
      title: 'Studienraum',
      description: 'Ruhiger Arbeitsbereich fÃ¼r Forschung und Studium.'
    },
    'archive': {
      title: 'Archiv',
      description: 'Historische Dokumente und Fotografien. Zugang nur nach Voranmeldung.'
    },
    'panorama': {
      title: 'Panorama-Terrasse',
      description: 'Atemberaubender Blick Ã¼ber Reutte und die umliegenden Berge.'
    }
  };
  
  // Room click handlers
  document.querySelectorAll('.room').forEach(room => {
    room.addEventListener('click', (e) => {
      const roomId = (e.currentTarget as SVGElement).getAttribute('data-room');
      
      if (roomId && roomData[roomId]) {
        showRoomModal(roomData[roomId]);
        
        // Highlight selected room
        document.querySelectorAll('.room').forEach(r => r.classList.remove('selected'));
        (e.currentTarget as SVGElement).classList.add('selected');
      }
    });
  });
  
  function showRoomModal(data: { title: string, description: string }) {
    const modal = document.getElementById('room-modal');
    const title = document.getElementById('room-title');
    const description = document.getElementById('room-description');
    
    if (title) title.textContent = data.title;
    if (description) description.textContent = data.description;
    
    if (modal) {
      modal.style.display = 'flex';
    }
  }
  
  // Close modal
  document.getElementById('close-modal')?.addEventListener('click', () => {
    const modal = document.getElementById('room-modal');
    if (modal) {
      modal.style.display = 'none';
    }
    
    document.querySelectorAll('.room').forEach(r => r.classList.remove('selected'));
  });
  
  // Navigate button
  document.getElementById('navigate-btn')?.addEventListener('click', () => {
    alert('Navigation wird gestartet...\nFolgen Sie den blauen Pfeilen auf dem Boden.');
    const modal = document.getElementById('room-modal');
    if (modal) {
      modal.style.display = 'none';
    }
  });
  
  // Location tracking
  let isTracking = false;
  const locateBtn = document.getElementById('locate-btn');
  const locationMarker = document.getElementById('location-marker');
  
  locateBtn?.addEventListener('click', () => {
    isTracking = !isTracking;
    locateBtn.classList.toggle('active', isTracking);
    
    if (isTracking && locationMarker) {
      // Simulate location (in real app, use indoor positioning)
      locationMarker.setAttribute('display', 'block');
      
      // Mock movement
      let x = 400, y = 460;
      setInterval(() => {
        if (isTracking) {
          x += (Math.random() - 0.5) * 10;
          y += (Math.random() - 0.5) * 10;
          locationMarker.setAttribute('cx', x.toString());
          locationMarker.setAttribute('cy', y.toString());
        }
      }, 2000);
    } else if (locationMarker) {
      locationMarker.setAttribute('display', 'none');
    }
  });
  
  // Pan and zoom with touch
  let isPanning = false;
  let startX = 0, startY = 0;
  let currentX = 0, currentY = 0;
  
  if (mapWrapper) {
    mapWrapper.addEventListener('touchstart', (e) => {
      if (e.touches.length === 1) {
        isPanning = true;
        startX = e.touches[0].clientX - currentX;
        startY = e.touches[0].clientY - currentY;
      }
    });
    
    mapWrapper.addEventListener('touchmove', (e) => {
      if (isPanning && e.touches.length === 1) {
        e.preventDefault();
        currentX = e.touches[0].clientX - startX;
        currentY = e.touches[0].clientY - startY;
        mapWrapper.style.transform = `scale(${zoomLevel}) translate(${currentX}px, ${currentY}px)`;
      }
    });
    
    mapWrapper.addEventListener('touchend', () => {
      isPanning = false;
    });
  }
</script>