---
import MobileLayout from '../../layouts/MobileLayout.astro';
import { getCollection } from 'astro:content';

// Get all exhibits
const exhibits = await getCollection('exhibits');

// Group by category
const categories = [...new Set(exhibits.flatMap(e => e.data.tags || []))];
const featured = exhibits.filter(e => e.data.featured);
---

<MobileLayout title="Exponate - Museum Gr√ºnes Haus">
  <div class="exhibits-page">
    <!-- Header with Search -->
    <div class="exhibits-header">
      <h1>Exponate</h1>
      <div class="search-bar">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
          <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
        </svg>
        <input type="text" id="search-input" placeholder="Suchen..." />
      </div>
    </div>

    <!-- Filter Tabs -->
    <div class="filter-tabs">
      <button class="filter-tab active" data-filter="all">Alle</button>
      <button class="filter-tab" data-filter="featured">Highlights</button>
      {categories.slice(0, 3).map(cat => (
        <button class="filter-tab" data-filter={cat}>{cat}</button>
      ))}
    </div>

    <!-- Exhibits Grid -->
    <div class="exhibits-container">
      <!-- Featured Section -->
      {featured.length > 0 && (
        <section class="exhibit-section" data-category="featured">
          <h2 class="section-title">‚≠ê Highlights</h2>
          <div class="exhibit-grid">
            {featured.map(exhibit => (
              <a href={`/mobile/exhibit/${exhibit.slug}`} 
                 class="exhibit-card featured-card" 
                 data-tags={JSON.stringify(exhibit.data.tags || [])}
                 data-title={exhibit.data.title.toLowerCase()}
                 data-artist={exhibit.data.artist.toLowerCase()}>
                <div class="exhibit-image">
                  <img src={exhibit.data.thumbnail || exhibit.data.image} alt={exhibit.data.title} />
                  {exhibit.data.audioGuide && (
                    <div class="audio-badge">üéß</div>
                  )}
                </div>
                <div class="exhibit-info">
                  <h3>{exhibit.data.title}</h3>
                  <p class="artist">{exhibit.data.artist}</p>
                  {exhibit.data.year && (
                    <p class="year">{exhibit.data.year}</p>
                  )}
                </div>
              </a>
            ))}
          </div>
        </section>
      )}

      <!-- All Exhibits -->
      <section class="exhibit-section" data-category="all">
        <h2 class="section-title">Alle Exponate</h2>
        <div class="exhibit-list">
          {exhibits.map(exhibit => (
            <a href={`/mobile/exhibit/${exhibit.slug}`} 
               class="exhibit-list-item"
               data-tags={JSON.stringify(exhibit.data.tags || [])}
               data-title={exhibit.data.title.toLowerCase()}
               data-artist={exhibit.data.artist.toLowerCase()}>
              <div class="list-image">
                <img src={exhibit.data.thumbnail || exhibit.data.image} alt={exhibit.data.title} />
              </div>
              <div class="list-info">
                <h3>{exhibit.data.title}</h3>
                <p class="artist">{exhibit.data.artist}</p>
                <div class="list-meta">
                  {exhibit.data.location && (
                    <span class="location">üìç {exhibit.data.location}</span>
                  )}
                  {exhibit.data.audioGuide && (
                    <span class="audio-indicator">üéß</span>
                  )}
                </div>
              </div>
              <div class="list-arrow">‚Ä∫</div>
            </a>
          ))}
        </div>
      </section>
    </div>

    <!-- No Results -->
    <div id="no-results" class="no-results" style="display: none;">
      <div class="no-results-icon">üîç</div>
      <p>Keine Exponate gefunden</p>
    </div>
  </div>
</MobileLayout>

<style>
  .exhibits-page {
    min-height: 100vh;
    background: white;
  }

  /* Header */
  .exhibits-header {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 20px;
    padding-bottom: 30px;
  }

  .exhibits-header h1 {
    font-size: 28px;
    margin-bottom: 15px;
  }

  /* Search Bar */
  .search-bar {
    display: flex;
    align-items: center;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 8px;
    padding: 10px 15px;
  }

  .search-bar svg {
    color: rgba(255, 255, 255, 0.8);
    margin-right: 10px;
  }

  #search-input {
    flex: 1;
    background: none;
    border: none;
    color: white;
    font-size: 16px;
    outline: none;
  }

  #search-input::placeholder {
    color: rgba(255, 255, 255, 0.7);
  }

  /* Filter Tabs */
  .filter-tabs {
    display: flex;
    gap: 10px;
    padding: 15px;
    overflow-x: auto;
    background: #f8f8f8;
    border-bottom: 1px solid #e0e0e0;
    -webkit-overflow-scrolling: touch;
  }

  .filter-tabs::-webkit-scrollbar {
    display: none;
  }

  .filter-tab {
    padding: 8px 16px;
    background: white;
    border: 1px solid #ddd;
    border-radius: 20px;
    font-size: 14px;
    white-space: nowrap;
    cursor: pointer;
    transition: all 0.2s;
    flex-shrink: 0;
  }

  .filter-tab.active {
    background: #667eea;
    color: white;
    border-color: #667eea;
  }

  /* Exhibits Container */
  .exhibits-container {
    padding: 20px;
  }

  .exhibit-section {
    margin-bottom: 30px;
  }

  .section-title {
    font-size: 20px;
    margin-bottom: 15px;
    color: #333;
  }

  /* Grid Layout for Featured */
  .exhibit-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 15px;
  }

  .exhibit-card {
    text-decoration: none;
    color: #333;
    transition: all 0.2s;
  }

  .exhibit-card:active {
    transform: scale(0.98);
  }

  .exhibit-image {
    position: relative;
    width: 100%;
    padding-top: 100%;
    border-radius: 8px;
    overflow: hidden;
    background: #f5f5f5;
    margin-bottom: 10px;
  }

  .exhibit-image img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .audio-badge {
    position: absolute;
    top: 8px;
    right: 8px;
    width: 28px;
    height: 28px;
    background: rgba(0, 0, 0, 0.7);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 14px;
  }

  .exhibit-info h3 {
    font-size: 14px;
    margin-bottom: 4px;
    line-height: 1.3;
  }

  .exhibit-info .artist {
    font-size: 12px;
    color: #666;
    margin-bottom: 2px;
  }

  .exhibit-info .year {
    font-size: 11px;
    color: #999;
  }

  /* List Layout for All */
  .exhibit-list {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .exhibit-list-item {
    display: flex;
    align-items: center;
    gap: 15px;
    padding: 15px;
    background: white;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
    text-decoration: none;
    color: #333;
    transition: all 0.2s;
  }

  .exhibit-list-item:active {
    transform: scale(0.98);
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.08);
  }

  .list-image {
    width: 70px;
    height: 70px;
    border-radius: 8px;
    overflow: hidden;
    flex-shrink: 0;
    background: #f5f5f5;
  }

  .list-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .list-info {
    flex: 1;
  }

  .list-info h3 {
    font-size: 16px;
    margin-bottom: 4px;
    line-height: 1.3;
  }

  .list-info .artist {
    font-size: 14px;
    color: #666;
    margin-bottom: 6px;
  }

  .list-meta {
    display: flex;
    gap: 10px;
    align-items: center;
  }

  .location {
    font-size: 12px;
    color: #999;
  }

  .audio-indicator {
    font-size: 14px;
  }

  .list-arrow {
    font-size: 24px;
    color: #ccc;
  }

  /* No Results */
  .no-results {
    text-align: center;
    padding: 60px 20px;
  }

  .no-results-icon {
    font-size: 64px;
    margin-bottom: 15px;
    opacity: 0.5;
  }

  .no-results p {
    font-size: 16px;
    color: #999;
  }

  /* Hiding mechanism */
  .exhibit-section.hidden,
  .exhibit-card.hidden,
  .exhibit-list-item.hidden {
    display: none;
  }
</style>

<script>
  // Search functionality
  const searchInput = document.getElementById('search-input') as HTMLInputElement;
  const noResults = document.getElementById('no-results');
  
  searchInput?.addEventListener('input', (e) => {
    const query = (e.target as HTMLInputElement).value.toLowerCase();
    filterExhibits(query);
  });
  
  function filterExhibits(query: string) {
    const cards = document.querySelectorAll('.exhibit-card, .exhibit-list-item');
    let hasResults = false;
    
    cards.forEach((card) => {
      const title = card.getAttribute('data-title') || '';
      const artist = card.getAttribute('data-artist') || '';
      const tags = JSON.parse(card.getAttribute('data-tags') || '[]');
      
      const matches = !query || 
        title.includes(query) || 
        artist.includes(query) ||
        tags.some((tag: string) => tag.toLowerCase().includes(query));
      
      if (matches) {
        card.classList.remove('hidden');
        hasResults = true;
      } else {
        card.classList.add('hidden');
      }
    });
    
    // Show/hide sections
    document.querySelectorAll('.exhibit-section').forEach(section => {
      const visibleCards = section.querySelectorAll('.exhibit-card:not(.hidden), .exhibit-list-item:not(.hidden)');
      if (visibleCards.length === 0) {
        section.classList.add('hidden');
      } else {
        section.classList.remove('hidden');
      }
    });
    
    // Show no results message
    if (noResults) {
      noResults.style.display = hasResults ? 'none' : 'block';
    }
  }
  
  // Filter tabs
  const filterTabs = document.querySelectorAll('.filter-tab');
  
  filterTabs.forEach(tab => {
    tab.addEventListener('click', () => {
      const filter = tab.getAttribute('data-filter');
      
      // Update active tab
      filterTabs.forEach(t => t.classList.remove('active'));
      tab.classList.add('active');
      
      // Filter content
      if (filter === 'all') {
        // Show all
        document.querySelectorAll('.exhibit-card, .exhibit-list-item').forEach(card => {
          card.classList.remove('hidden');
        });
        document.querySelectorAll('.exhibit-section').forEach(section => {
          section.classList.remove('hidden');
        });
      } else if (filter === 'featured') {
        // Show only featured section
        document.querySelectorAll('.exhibit-section').forEach(section => {
          if (section.getAttribute('data-category') === 'featured') {
            section.classList.remove('hidden');
          } else {
            section.classList.add('hidden');
          }
        });
      } else {
        // Filter by tag
        document.querySelectorAll('.exhibit-card, .exhibit-list-item').forEach(card => {
          const tags = JSON.parse(card.getAttribute('data-tags') || '[]');
          if (tags.includes(filter)) {
            card.classList.remove('hidden');
          } else {
            card.classList.add('hidden');
          }
        });
        
        // Update section visibility
        document.querySelectorAll('.exhibit-section').forEach(section => {
          const visibleCards = section.querySelectorAll('.exhibit-card:not(.hidden), .exhibit-list-item:not(.hidden)');
          if (visibleCards.length === 0) {
            section.classList.add('hidden');
          } else {
            section.classList.remove('hidden');
          }
        });
      }
      
      // Check for no results
      const hasResults = document.querySelectorAll('.exhibit-card:not(.hidden), .exhibit-list-item:not(.hidden)').length > 0;
      if (noResults) {
        noResults.style.display = hasResults ? 'none' : 'block';
      }
    });
  });
</script>