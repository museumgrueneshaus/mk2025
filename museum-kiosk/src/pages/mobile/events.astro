---
import MobileLayout from '../../layouts/MobileLayout.astro';
import { getCollection } from 'astro:content';

// Get all published events
const events = await getCollection('events', ({ data }) => {
  return data.published && !data.cancelled;
});

// Sort events by date
const sortedEvents = events.sort((a, b) => {
  return new Date(a.data.date).getTime() - new Date(b.data.date).getTime();
});

// Group events by date
const eventsByDate = sortedEvents.reduce((acc, event) => {
  const date = new Date(event.data.date);
  const dateKey = date.toISOString().split('T')[0];
  const dateLabel = date.toLocaleDateString('de-DE', { 
    weekday: 'short', 
    day: 'numeric', 
    month: 'long',
    year: 'numeric'
  });
  
  if (!acc[dateKey]) {
    acc[dateKey] = {
      label: dateLabel,
      events: []
    };
  }
  
  acc[dateKey].events.push(event);
  return acc;
}, {});

// Separate past and upcoming events
const today = new Date();
today.setHours(0, 0, 0, 0);

const upcomingDates = Object.keys(eventsByDate)
  .filter(date => new Date(date) >= today)
  .sort();

const pastDates = Object.keys(eventsByDate)
  .filter(date => new Date(date) < today)
  .sort()
  .reverse()
  .slice(0, 5); // Only show last 5 past event dates
---

<MobileLayout title="Veranstaltungen - Museum Gr√ºnes Haus" activeTab="events">
  <div class="mobile-page">
    <!-- Clean Header -->
    <div class="mobile-header">
      <h1>Veranstaltungen</h1>
    </div>

    <!-- Clean Filter Buttons -->
    <div style="padding: 0 var(--space-4) var(--space-4) var(--space-4);">
      <div class="clean-btn-group">
        <button class="clean-btn clean-btn-primary filter-tab" data-filter="upcoming">Kommende</button>
        <button class="clean-btn filter-tab" data-filter="past">Vergangene</button>
      </div>
    </div>

    <!-- Clean Content -->
    <div class="mobile-content">
      <!-- Upcoming Events -->
      <section class="clean-section events-section" id="upcoming">
        {upcomingDates.length > 0 ? (
          upcomingDates.map(dateKey => (
            <div class="event-date-group">
              <h2 class="clean-section-title">{eventsByDate[dateKey].label}</h2>
              <div class="clean-card">
                <div class="clean-list">
                  {eventsByDate[dateKey].events.map(event => (
                    <a href={`/mobile/event/${event.slug}`} class="clean-event-item">
                      <div class="clean-event-thumb">
                        <img src={event.data.image || '/images/placeholder-event.jpg'} alt={event.data.title} loading="lazy" />
                        {event.data.cancelled && (
                          <div class="clean-badge" style="position: absolute; top: var(--space-1); right: var(--space-1); background: var(--color-error); color: white;">Abgesagt</div>
                        )}
                        {event.data.soldOut && (
                          <div class="clean-badge" style="position: absolute; top: var(--space-1); right: var(--space-1); background: var(--color-warning); color: white;">Ausverkauft</div>
                        )}
                      </div>
                      <div class="clean-event-info">
                        <div class="clean-event-time">{event.data.time}</div>
                        <h3 class="clean-event-title">{event.data.title}</h3>
                        {event.data.subtitle && (
                          <p class="clean-event-subtitle">{event.data.subtitle}</p>
                        )}
                        <div class="clean-event-details">
                          <span>üìç {event.data.location}</span>
                          {event.data.price && (
                            <span class="clean-event-price">‚Ç¨{event.data.price}</span>
                          )}
                        </div>
                      </div>
                      <div class="clean-chevron">‚Ä∫</div>
                    </a>
                  ))}
                </div>
              </div>
            </div>
          ))
        ) : (
          <div class="clean-empty">
            <div class="clean-empty-icon">üìÖ</div>
            <p class="clean-empty-text">Keine kommenden Veranstaltungen</p>
          </div>
        )}
      </section>

      <!-- Past Events -->
      <section class="clean-section events-section" id="past" style="display: none;">
        {pastDates.length > 0 ? (
          pastDates.map(dateKey => (
            <div class="event-date-group">
              <h2 class="clean-section-title">{eventsByDate[dateKey].label}</h2>
              <div class="clean-card">
                <div class="clean-list">
                  {eventsByDate[dateKey].events.map(event => (
                    <a href={`/mobile/event/${event.slug}`} class="clean-event-item past-event">
                      <div class="clean-event-thumb">
                        <img src={event.data.image || '/images/placeholder-event.jpg'} alt={event.data.title} loading="lazy" />
                      </div>
                      <div class="clean-event-info">
                        <div class="clean-event-time">{event.data.time}</div>
                        <h3 class="clean-event-title">{event.data.title}</h3>
                        {event.data.subtitle && (
                          <p class="clean-event-subtitle">{event.data.subtitle}</p>
                        )}
                        <div class="clean-event-details">
                          <span>üìç {event.data.location}</span>
                        </div>
                      </div>
                      <div class="clean-chevron">‚Ä∫</div>
                    </a>
                  ))}
                </div>
              </div>
            </div>
          ))
        ) : (
          <div class="clean-empty">
            <div class="clean-empty-icon">üìÖ</div>
            <p class="clean-empty-text">Keine vergangenen Veranstaltungen</p>
          </div>
        )}
      </section>
    </div>
  </div>
</MobileLayout>

<style>
  /* Clean Event Components */
  .event-date-group {
    margin-bottom: var(--space-8);
  }

  .clean-event-item {
    display: flex;
    align-items: center;
    gap: var(--space-4);
    padding: var(--space-4);
    border-bottom: 1px solid var(--color-border);
    text-decoration: none;
    color: var(--color-primary);
    transition: var(--transition);
    position: relative;
  }

  .clean-event-item:hover {
    background: var(--color-bg-alt);
  }

  .clean-event-item:active {
    background: var(--color-border);
  }

  .clean-event-item:last-child {
    border-bottom: none;
  }

  .clean-event-item.past-event {
    opacity: 0.7;
  }

  .clean-event-thumb {
    position: relative;
    width: 80px;
    height: 80px;
    border-radius: var(--radius-md);
    background: var(--color-bg-alt);
    overflow: hidden;
    flex-shrink: 0;
  }

  .clean-event-thumb img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .clean-event-info {
    flex: 1;
    min-width: 0;
  }

  .clean-event-time {
    font-size: var(--font-size-xs);
    font-weight: var(--font-weight-semibold);
    color: var(--color-accent);
    margin-bottom: var(--space-1);
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .clean-event-title {
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-semibold);
    margin: 0 0 var(--space-1) 0;
    line-height: 1.4;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .clean-event-subtitle {
    font-size: var(--font-size-sm);
    color: var(--color-secondary);
    margin: 0 0 var(--space-2) 0;
    line-height: 1.4;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .clean-event-details {
    display: flex;
    align-items: center;
    gap: var(--space-3);
    font-size: var(--font-size-xs);
    color: var(--color-tertiary);
  }

  .clean-event-price {
    margin-left: auto;
    color: var(--color-success);
    font-weight: var(--font-weight-semibold);
  }

  /* Filter tabs */
  .filter-tab.clean-btn-primary {
    background: var(--color-accent);
    color: white;
    border-color: var(--color-accent);
  }

  .filter-tab.clean-btn {
    background: var(--color-bg);
    color: var(--color-primary);
    border-color: var(--color-border);
  }

  /* Hidden state for tabs */
  .events-section {
    display: block;
  }

  .events-section[style*="display: none"] {
    display: none !important;
  }
</style>

<script>
  // Tab switching functionality
  const filterTabs = document.querySelectorAll('.filter-tab');
  const sections = {
    upcoming: document.getElementById('upcoming'),
    past: document.getElementById('past')
  };
  
  filterTabs.forEach(tab => {
    tab.addEventListener('click', () => {
      const filter = tab.getAttribute('data-filter');
      
      // Update active tab
      filterTabs.forEach(t => {
        t.classList.remove('clean-btn-primary');
        t.classList.add('clean-btn');
      });
      tab.classList.remove('clean-btn');
      tab.classList.add('clean-btn-primary');
      
      // Show/hide sections
      Object.keys(sections).forEach(key => {
        if (sections[key]) {
          sections[key].style.display = key === filter ? 'block' : 'none';
        }
      });
    });
  });
</script>