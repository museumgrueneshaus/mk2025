version: '3.8'

services:
  # PostgreSQL Datenbank
  postgres:
    image: postgres:15-alpine
    container_name: museum-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: museum
      POSTGRES_USER: museum
      POSTGRES_PASSWORD: museum123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - museum-network

  # Strapi Backend
  strapi:
    build: 
      context: ./kiosk-backend
      dockerfile: Dockerfile.dev
    container_name: museum-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: museum
      DATABASE_USERNAME: museum
      DATABASE_PASSWORD: museum123
      DATABASE_SSL: false
      JWT_SECRET: jwt-secret-change-in-production
      ADMIN_JWT_SECRET: admin-jwt-secret-change-in-production
      APP_KEYS: app-key-1,app-key-2,app-key-3,app-key-4
      API_TOKEN_SALT: api-token-salt
      TRANSFER_TOKEN_SALT: transfer-token-salt
      # Admin user
      ADMIN_EMAIL: admin@museum.local
      ADMIN_PASSWORD: Museum2024!
    volumes:
      - ./kiosk-backend:/app
      - strapi_node_modules:/app/node_modules
      - strapi_uploads:/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - museum-network
    depends_on:
      - postgres

  # Admin Portal
  admin-portal:
    image: nginx:alpine
    container_name: museum-admin-dev
    volumes:
      - ./admin-portal:/usr/share/nginx/html:ro
      - ./nginx-admin.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8080:80"
    networks:
      - museum-network
    depends_on:
      - strapi

  # Katalog Frontend
  katalog:
    image: nginx:alpine
    container_name: museum-katalog-dev
    volumes:
      - ./katalog-frontend:/usr/share/nginx/html:ro
      - ./nginx-katalog.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8081:80"
    networks:
      - museum-network
    depends_on:
      - strapi

  # pgAdmin (f√ºr Datenbank-Verwaltung)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: museum-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@museum.local
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - museum-network
    depends_on:
      - postgres

networks:
  museum-network:
    driver: bridge

volumes:
  postgres_data:
  strapi_node_modules:
  strapi_uploads: